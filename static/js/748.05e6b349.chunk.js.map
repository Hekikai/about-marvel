{"version":3,"file":"static/js/748.05e6b349.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nimport './appBanner.scss';\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className=\"app__banner\">\n\t\t\t<img src={ avengers } alt=\"Avengers\"/>\n\t\t\t<div className=\"app__banner-text\">\n\t\t\t\tNew comics every week!<br/>\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={ avengersLogo } alt=\"Avengers logo\"/>\n\t\t</div>\n\t)\n}\n\nexport default AppBanner;","import React from 'react';\r\nimport imgError from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tstyle={ {display: 'block', margin: '2rem auto', width: '96px'} }\r\n\t\t\tsrc={ imgError } alt=\"Danger icon\"/>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, Component, newCharLoading) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting': {\r\n\t\t\treturn <Spinner/>;\r\n\t\t}\r\n\t\tcase 'loading': {\r\n\t\t\treturn newCharLoading ? <Component/> : <Spinner/>;\r\n\t\t}\r\n\t\tcase 'confirmed': {\r\n\t\t\treturn <Component/>;\r\n\t\t}\r\n\t\tcase 'error': {\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst ComicsList = () => {\r\n\r\n\tconst [comicsList, setComicsList] = useState([]);\r\n\tconst [newCharLoading, setNewCharLoading] = useState(false);\r\n\tconst [offset, setOffset] = useState(0);\r\n\tconst [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n\tconst {getAllComics, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(offset, true);\r\n\t}, [])\r\n\r\n\tconst onRequest = (offset, initial) => {\r\n\t\tinitial ? setNewCharLoading(false) : setNewCharLoading(true);\r\n\t\tgetAllComics(offset)\r\n\t\t\t.then(onComicsListLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'))\r\n\t}\r\n\r\n\tconst onComicsListLoaded = (newComicsList) => {\r\n\t\tlet ended = false;\r\n\t\tif (newComicsList.length < 8) {\r\n\t\t\tended = true;\r\n\t\t}\r\n\r\n\t\tsetComicsList([...comicsList, ...newComicsList]);\r\n\t\tsetNewCharLoading(false);\r\n\t\tsetOffset((offset) => offset + 8);\r\n\t\tsetComicsEnded(ended);\r\n\t};\r\n\r\n\tconst renderItems = (array) => {\r\n\t\tconst elements = array.map((elem, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li className=\"comics__item\" key={ index }>\r\n\t\t\t\t\t<Link to={ `/comics/${ elem.id }` }>\r\n\t\t\t\t\t\t<img src={ elem.thumbnail } alt={ elem.title }\r\n\t\t\t\t\t\t\t className=\"comics__item-img\"/>\r\n\t\t\t\t\t\t<div className=\"comics__item-name\">{ elem.title }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"comics__item-price\">{ elem.price }</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<ul className=\"comics__grid\">\r\n\t\t\t\t{ elements }\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"comics__list\">\r\n\t\t\t{ setContent(process, () => renderItems(comicsList), newCharLoading) }\r\n\t\t\t<button\r\n\t\t\t\tdisabled={ newCharLoading }\r\n\t\t\t\tstyle={ {'display': comicsEnded ? 'none' : 'block'} }\r\n\t\t\t\tclassName=\"button button__main button__long\"\r\n\t\t\t\tonClick={ () => onRequest(offset) }>\r\n\t\t\t\t<div className=\"inner\">load more</div>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Page with list of our comics\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Comics page</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner/>\r\n\t\t\t<ComicsList/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst {loading, error, request, clearError, process, setProcess} = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=3b46640549182f2ab56a8cc596f5e343';\r\n\tconst _baseOffset = 215;\r\n\r\n\tconst getAllCharacters = async(offset = _baseOffset) => {\r\n\t\tconst result = await request(`${ _apiBase }characters?limit=9&offset=${ offset }&${ _apiKey }`);\r\n\t\treturn result.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async(id) => {\r\n\t\tconst result = await request(`${ _apiBase }characters/${ id }?${ _apiKey }`);\r\n\t\treturn _transformCharacter(result.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharacterByName = async(name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getAllComics = async(offset = 0) => {\r\n\t\tconst result = await request(`${ _apiBase }comics?orderBy=issueNumber&limit=8&offset=${ offset }&${ _apiKey }`);\r\n\t\treturn result.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async(id) => {\r\n\t\tconst result = await request(`${ _apiBase }comics/${ id }?${ _apiKey }`);\r\n\t\treturn _transformComics(result.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount ? `${ comics.pageCount } p.` : 'No information about the' +\r\n\t\t\t\t' number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices.price ? `${ comics.prices.price }$` : 'not available'\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (character) => {\r\n\t\treturn {\r\n\t\t\tid: character.id,\r\n\t\t\tname: character.name,\r\n\t\t\tdescription: character.description\r\n\t\t\t\t? `${ character.description.slice(0, 210) }...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: character.thumbnail.path + '.' +\r\n\t\t\t\tcharacter.thumbnail.extension,\r\n\t\t\thomePage: character.urls[0].url,\r\n\t\t\twikiPage: character.urls[1].url,\r\n\t\t\tcomics: character.comics.items.slice(0, 10)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tgetCharacterByName\r\n\t}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async(url, method = 'GET', body = null, headers = {\r\n\t\t'Content-Type':\r\n\t\t\t'application/json'\r\n\t}) => {\r\n\r\n\t\tsetLoading(true);\r\n\t\tsetProcess('loading');\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, headers, body});\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${ url }, status: ${ response.status }`);\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(error.message);\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetError(null);\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {loading, error, request, clearError, process, setProcess};\r\n};\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["className","src","avengers","alt","avengersLogo","style","display","margin","width","imgError","setContent","process","Component","newCharLoading","Spinner","ErrorMessage","Error","useState","comicsList","setComicsList","setNewCharLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","array","elements","map","elem","index","to","id","thumbnail","title","price","renderItems","disabled","onClick","Helmet","name","content","AppBanner","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","result","results","_transformCharacter","getCharacter","getCharacterByName","res","_transformComics","getComic","comics","description","pageCount","path","extension","language","textObjects","prices","character","slice","homePage","urls","wikiPage","items","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}