{"version":3,"file":"static/js/379.3178056e.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/skeleton/Skeleton.js","utils/setContent.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import React from 'react';\r\nimport imgError from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tstyle={ {display: 'block', margin: '2rem auto', width: '96px'} }\r\n\t\t\tsrc={ imgError } alt=\"Danger icon\"/>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n\treturn (\n\t\t<>\n\t\t\t<p className=\"char__select\">Please select a character to see information</p>\n\t\t\t<div className=\"skeleton\">\n\t\t\t\t<div className=\"pulse skeleton__header\">\n\t\t\t\t\t<div className=\"pulse skeleton__circle\"></div>\n\t\t\t\t\t<div className=\"pulse skeleton__mini\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Skeleton;","import Skeleton from \"../components/skeleton/Skeleton\";\r\nimport Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting': {\r\n\t\t\treturn <Skeleton/>;\r\n\t\t}\r\n\t\tcase 'loading': {\r\n\t\t\treturn <Spinner/>\r\n\t\t}\r\n\t\tcase 'confirmed': {\r\n\t\t\treturn <Component data={ data }/>;\r\n\t\t}\r\n\t\tcase 'error': {\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default setContent;","import { useState, useEffect } from \"react\";\r\n\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nimport './randomChar.scss';\r\n\r\nconst RandomChar = () => {\r\n\r\n\tconst [character, setCharacter] = useState({});\r\n\tconst {getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateCharacter();\r\n\t\t// const timerId = setInterval(updateCharacter, 5000);\r\n\r\n\t\treturn () => {\r\n\t\t\t// clearInterval(timerId);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst onCharacterLoaded = (character) => {\r\n\t\tsetCharacter(character);\r\n\t};\r\n\r\n\tconst updateCharacter = () => {\r\n\t\tclearError();\r\n\t\tconst id = Math.floor(Math.random() * (1_011_400 - 1_011_000) + 1_011_000);\r\n\t\tgetCharacter(id)\r\n\t\t\t.then(onCharacterLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"randomChar\">\r\n\t\t\t{ setContent(process, View, character) }\r\n\t\t\t<div className=\"randomChar__static\">\r\n\t\t\t\t<p className=\"randomChar__title\">\r\n\t\t\t\t\tRandom character for today!<br/>\r\n\t\t\t\t\tDo you want to get to know him better?\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"randomChar__title\">\r\n\t\t\t\t\tOr choose another one\r\n\t\t\t\t</p>\r\n\t\t\t\t<button className=\"button button__main\"\r\n\t\t\t\t\t\tonClick={ updateCharacter }>\r\n\t\t\t\t\t<div className=\"inner\">try it</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<img src={ mjolnir } alt=\"mjolnir\" className=\"randomChar__decoration\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst View = ({data}) => {\r\n\r\n\tconst {name, description, thumbnail, homePage, wikiPage} = data;\r\n\r\n\tlet imgStyle = {'objectFit': 'cover'};\r\n\tif (thumbnail?.indexOf('not_available')) {\r\n\t\timgStyle = {'objectFit': 'contain'};\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"randomChar__block\">\r\n\t\t\t<img src={ thumbnail } alt=\"Random character\" className=\"randomChar__img\"\r\n\t\t\t\t style={ imgStyle }/>\r\n\t\t\t<div className=\"randomChar__info\">\r\n\t\t\t\t<p className=\"randomChar__name\">{ name }</p>\r\n\t\t\t\t<p className=\"randomChar__descr\">\r\n\t\t\t\t\t{ description }\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"randomChar__btns\">\r\n\t\t\t\t\t<a href={ homePage } className=\"button button__main\">\r\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href={ wikiPage } className=\"button button__secondary\">\r\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default RandomChar;","import { useState, useEffect, useMemo } from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './charList.scss';\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nconst setContent = (process, Component, newCharLoading) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting': {\r\n\t\t\treturn <Spinner/>;\r\n\t\t}\r\n\t\tcase 'loading': {\r\n\t\t\treturn newCharLoading ? <Component/> : <Spinner/>;\r\n\t\t}\r\n\t\tcase 'confirmed': {\r\n\t\t\treturn <Component/>;\r\n\t\t}\r\n\t\tcase 'error': {\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nconst CharList = (props) => {\r\n\r\n\tconst {getAllCharacters, process, setProcess} = useMarvelService();\r\n\r\n\tconst [characters, setCharacters] = useState([]);\r\n\tconst [newCharLoading, setNewCharLoading] = useState(false);\r\n\tconst [offset, setOffset] = useState(1541);\r\n\tconst [charEnded, setCharEnded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(offset, true);\r\n\t}, [])\r\n\r\n\tconst onRequest = (offset, initial) => {\r\n\t\tinitial ? setNewCharLoading(false) : setNewCharLoading(true);\r\n\t\tgetAllCharacters(offset)\r\n\t\t\t.then(onCharListLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'))\r\n\t}\r\n\r\n\tconst onCharListLoaded = (newCharacters) => {\r\n\t\tlet ended = false;\r\n\t\tif (newCharacters.length < 9) {\r\n\t\t\tended = true;\r\n\t\t}\r\n\r\n\t\tsetCharacters((characters) => [...characters, ...newCharacters]);\r\n\t\tsetNewCharLoading(false);\r\n\t\tsetOffset((offset) => offset + 9);\r\n\t\tsetCharEnded(ended);\r\n\t};\r\n\r\n\tconst renderItems = (array) => {\r\n\t\tconst items = array.map((elem) => {\r\n\t\t\tlet imgStyle = {'objectFit': 'cover'};\r\n\t\t\tif (elem.thumbnail.indexOf('not_available')) {\r\n\t\t\t\timgStyle = {'objectFit': 'fill'}\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName=\"char__item\"\r\n\t\t\t\t\ttabIndex={ 0 }\r\n\t\t\t\t\tkey={ elem.id }\r\n\t\t\t\t\tonFocus={ () => props.onCharSelected(elem.id) }>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={ elem.thumbnail }\r\n\t\t\t\t\t\talt={ elem.name }\r\n\t\t\t\t\t\tstyle={ imgStyle }/>\r\n\t\t\t\t\t<div className=\"char__name\">{ elem.name }</div>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<ul className=\"char__grid\">\r\n\t\t\t\t{ items }\r\n\t\t\t</ul>\r\n\t\t);\r\n\t};\r\n\r\n\tconst elements = useMemo(() => {\r\n\t\treturn setContent(process, () => renderItems(characters), newCharLoading);\r\n\t}, [process])\r\n\r\n\treturn (\r\n\t\t<div className=\"char__list\">\r\n\t\t\t{ elements }\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button button__main button__long\"\r\n\t\t\t\tdisabled={ newCharLoading }\r\n\t\t\t\tstyle={ {'display': charEnded ? 'none' : 'block'} }\r\n\t\t\t\tonClick={ () => onRequest(offset) }>\r\n\t\t\t\t<div className=\"inner\">load more</div>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nCharList.propTypes = {\r\n\tonCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import { useEffect, useState } from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n\tconst [character, setCharacter] = useState(null);\r\n\r\n\tconst {getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateCharacter();\r\n\t}, [props.characterId])\r\n\r\n\r\n\tconst onCharacterLoaded = (character) => {\r\n\t\tsetCharacter(character);\r\n\t};\r\n\r\n\tconst updateCharacter = () => {\r\n\t\tconst {characterId} = props;\r\n\t\tif (!characterId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tclearError();\r\n\t\tgetCharacter(characterId)\r\n\t\t\t.then(onCharacterLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'))\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"char__info\">\r\n\t\t\t{ setContent(process, View, character) }\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst View = ({data}) => {\r\n\r\n\tconst {name, description, thumbnail, homePage, wikiPage, comics} = data;\r\n\tlet imgStyle = {'objectFit': 'contain'};\r\n\tif (thumbnail.includes('not_available')) {\r\n\t\timgStyle = {'objectFit': 'contain'}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"char__basics\">\r\n\t\t\t\t<img src={ thumbnail } alt={ name } style={ imgStyle }/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"char__info-name\">{ name }</div>\r\n\t\t\t\t\t<div className=\"char__btns\">\r\n\t\t\t\t\t\t<a href={ homePage } className=\"button button__main\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href={ wikiPage } className=\"button button__secondary\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__descr\">\r\n\t\t\t\t{ description }\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__comics\">Comics:</div>\r\n\t\t\t<ul className=\"char__comics-list\">\r\n\t\t\t\t{ comics.length > 0 ? null : \"There are no comics\" }\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tcomics.map((item, index) => {\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={ index } className=\"char__comics-item\">\r\n\t\t\t\t\t\t\t\t{ item.name }\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nCharInfo.propTypes = {\r\n\tcharacterId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from 'react';\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n\tconst [char, setChar] = useState(null);\r\n\tconst {loading, error, getCharacterByName, clearError} = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateChar = (name) => {\r\n\t\tclearError();\r\n\r\n\t\tgetCharacterByName(name)\r\n\t\t\t.then(onCharLoaded);\r\n\t}\r\n\r\n\tconst errorMessage = error ?\r\n\t\t<div className=\"char__search-critical-error\"><ErrorMessage/></div> : null;\r\n\tconst results = !char ? null : char.length > 0 ?\r\n\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t<div className=\"char__search-success\">There is! Visit { char[0].name } page?</div>\r\n\t\t\t<Link to={ `/characters/${ char[0].id }` } className=\"button button__secondary\">\r\n\t\t\t\t<div className=\"inner\">To page</div>\r\n\t\t\t</Link>\r\n\t\t</div> :\r\n\t\t<div className=\"char__search-error\">\r\n\t\t\tThe character was not found. Check the name and try again\r\n\t\t</div>;\r\n\r\n\treturn (\r\n\t\t<div className=\"char__search-form\">\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={ {\r\n\t\t\t\t\tcharName: ''\r\n\t\t\t\t} }\r\n\t\t\t\tvalidationSchema={ Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required('This field is required')\r\n\t\t\t\t}) }\r\n\t\t\t\tonSubmit={ ({charName}) => {\r\n\t\t\t\t\tupdateChar(charName);\r\n\t\t\t\t} }\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by\r\n\t\t\t\t\t\tname:</label>\r\n\t\t\t\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tid=\"charName\"\r\n\t\t\t\t\t\t\tname='charName'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tclassName=\"button button__main\"\r\n\t\t\t\t\t\t\tdisabled={ loading }>\r\n\t\t\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage component=\"div\" className=\"char__search-error\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"charName\"/>\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{ results }\r\n\t\t\t{ errorMessage }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharSearchForm;","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n\tconst [selectedCharacter, setChar] = useState(null);\r\n\r\n\tconst onCharacterSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Marvel information portal\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Marvel information</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={ onCharacterSelected }/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo characterId={ selectedCharacter }/>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharSearchForm/>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={ decoration } alt=\"vision\"/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MainPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst {loading, error, request, clearError, process, setProcess} = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=3b46640549182f2ab56a8cc596f5e343';\r\n\tconst _baseOffset = 215;\r\n\r\n\tconst getAllCharacters = async(offset = _baseOffset) => {\r\n\t\tconst result = await request(`${ _apiBase }characters?limit=9&offset=${ offset }&${ _apiKey }`);\r\n\t\treturn result.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async(id) => {\r\n\t\tconst result = await request(`${ _apiBase }characters/${ id }?${ _apiKey }`);\r\n\t\treturn _transformCharacter(result.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharacterByName = async(name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getAllComics = async(offset = 0) => {\r\n\t\tconst result = await request(`${ _apiBase }comics?orderBy=issueNumber&limit=8&offset=${ offset }&${ _apiKey }`);\r\n\t\treturn result.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async(id) => {\r\n\t\tconst result = await request(`${ _apiBase }comics/${ id }?${ _apiKey }`);\r\n\t\treturn _transformComics(result.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount ? `${ comics.pageCount } p.` : 'No information about the' +\r\n\t\t\t\t' number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices.price ? `${ comics.prices.price }$` : 'not available'\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (character) => {\r\n\t\treturn {\r\n\t\t\tid: character.id,\r\n\t\t\tname: character.name,\r\n\t\t\tdescription: character.description\r\n\t\t\t\t? `${ character.description.slice(0, 210) }...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: character.thumbnail.path + '.' +\r\n\t\t\t\tcharacter.thumbnail.extension,\r\n\t\t\thomePage: character.urls[0].url,\r\n\t\t\twikiPage: character.urls[1].url,\r\n\t\t\tcomics: character.comics.items.slice(0, 10)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tgetCharacterByName\r\n\t}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async(url, method = 'GET', body = null, headers = {\r\n\t\t'Content-Type':\r\n\t\t\t'application/json'\r\n\t}) => {\r\n\r\n\t\tsetLoading(true);\r\n\t\tsetProcess('loading');\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, headers, body});\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${ url }, status: ${ response.status }`);\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(error.message);\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetError(null);\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {loading, error, request, clearError, process, setProcess};\r\n};\r\n"],"names":["style","display","margin","width","src","imgError","alt","className","process","Component","data","Spinner","ErrorMessage","Error","View","name","description","thumbnail","homePage","wikiPage","imgStyle","indexOf","href","useState","character","setCharacter","useMarvelService","getCharacter","clearError","setProcess","useEffect","updateCharacter","onCharacterLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","props","getAllCharacters","characters","setCharacters","newCharLoading","setNewCharLoading","offset","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharacters","ended","length","elements","useMemo","array","items","map","elem","tabIndex","onFocus","onCharSelected","renderItems","disabled","comics","includes","item","index","characterId","ErrorBoundary","state","error","errorInfo","console","log","this","setState","children","char","setChar","loading","getCharacterByName","onCharLoaded","errorMessage","results","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","selectedCharacter","Helmet","content","decoration","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","message","useHttp","_apiBase","_apiKey","result","_transformCharacter","res","getAllComics","_transformComics","getComic","title","pageCount","path","extension","language","textObjects","price","prices","slice","urls"],"sourceRoot":""}