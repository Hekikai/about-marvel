{"version":3,"file":"static/js/501.a17691b8.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/pages/SinglePage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nimport './appBanner.scss';\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className=\"app__banner\">\n\t\t\t<img src={ avengers } alt=\"Avengers\"/>\n\t\t\t<div className=\"app__banner-text\">\n\t\t\t\tNew comics every week!<br/>\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={ avengersLogo } alt=\"Avengers logo\"/>\n\t\t</div>\n\t)\n}\n\nexport default AppBanner;","import React from 'react';\r\nimport imgError from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tstyle={ {display: 'block', margin: '2rem auto', width: '96px'} }\r\n\t\t\tsrc={ imgError } alt=\"Danger icon\"/>\r\n\t);\r\n};\r\n\r\nexport default ErrorMessage;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n\tconst {id} = useParams();\r\n\tconst [data, setData] = useState(null);\r\n\tconst {loading, error, getComic, getCharacter, clearError} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateData()\r\n\t}, [id])\r\n\r\n\tconst updateData = () => {\r\n\t\tclearError();\r\n\r\n\t\tswitch (dataType) {\r\n\t\t\tcase 'comic':\r\n\t\t\t\tgetComic(id).then(onDataLoaded);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'character':\r\n\t\t\t\tgetCharacter(id).then(onDataLoaded);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onDataLoaded = (data) => {\r\n\t\tsetData(data);\r\n\t}\r\n\r\n\tconst errorMessage = error ? <ErrorMessage/> : null;\r\n\tconst spinner = loading ? <Spinner/> : null;\r\n\tconst content = !(loading || error || !data) ? <Component data={data}/> : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner/>\r\n\t\t\t{errorMessage}\r\n\t\t\t{spinner}\r\n\t\t\t{content}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SinglePage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst {loading, error, request, clearError, process, setProcess} = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=3b46640549182f2ab56a8cc596f5e343';\r\n\tconst _baseOffset = 215;\r\n\r\n\tconst getAllCharacters = async(offset = _baseOffset) => {\r\n\t\tconst result = await request(`${ _apiBase }characters?limit=9&offset=${ offset }&${ _apiKey }`);\r\n\t\treturn result.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async(id) => {\r\n\t\tconst result = await request(`${ _apiBase }characters/${ id }?${ _apiKey }`);\r\n\t\treturn _transformCharacter(result.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharacterByName = async(name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getAllComics = async(offset = 0) => {\r\n\t\tconst result = await request(`${ _apiBase }comics?orderBy=issueNumber&limit=8&offset=${ offset }&${ _apiKey }`);\r\n\t\treturn result.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async(id) => {\r\n\t\tconst result = await request(`${ _apiBase }comics/${ id }?${ _apiKey }`);\r\n\t\treturn _transformComics(result.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount ? `${ comics.pageCount } p.` : 'No information about the' +\r\n\t\t\t\t' number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices.price ? `${ comics.prices.price }$` : 'not available'\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (character) => {\r\n\t\treturn {\r\n\t\t\tid: character.id,\r\n\t\t\tname: character.name,\r\n\t\t\tdescription: character.description\r\n\t\t\t\t? `${ character.description.slice(0, 210) }...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: character.thumbnail.path + '.' +\r\n\t\t\t\tcharacter.thumbnail.extension,\r\n\t\t\thomePage: character.urls[0].url,\r\n\t\t\twikiPage: character.urls[1].url,\r\n\t\t\tcomics: character.comics.items.slice(0, 10)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tgetCharacterByName\r\n\t}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async(url, method = 'GET', body = null, headers = {\r\n\t\t'Content-Type':\r\n\t\t\t'application/json'\r\n\t}) => {\r\n\r\n\t\tsetLoading(true);\r\n\t\tsetProcess('loading');\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, headers, body});\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${ url }, status: ${ response.status }`);\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(error.message);\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetError(null);\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {loading, error, request, clearError, process, setProcess};\r\n};\r\n"],"names":["className","src","avengers","alt","avengersLogo","style","display","margin","width","imgError","Component","dataType","id","useParams","useState","data","setData","useMarvelService","loading","error","getComic","getCharacter","clearError","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","content","setLoading","setError","process","setProcess","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","message","useHttp","_apiBase","_apiKey","getAllCharacters","offset","result","results","map","_transformCharacter","getCharacterByName","name","res","getAllComics","_transformComics","comics","title","description","pageCount","thumbnail","path","extension","language","textObjects","price","prices","character","slice","homePage","urls","wikiPage","items"],"sourceRoot":""}